name: Android CI

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build (Debug)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Point local.properties at CI SDK
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Gradle build (debug, all flavors)
        run: |
          ./gradlew --stacktrace --no-daemon :app:assembleDebug :wear:assembleDebug

      - name: Upload APKs (debug)
        uses: actions/upload-artifact@v4
        with:
          name: apks-debug
          path: |
            app/build/outputs/apk/**/debug/*.apk
            wear/build/outputs/apk/**/debug/*.apk

  release:
    name: Build (Release, signed)
    runs-on: ubuntu-latest
    needs: build
    if: >-
      ${{ github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          sdkmanager --install "platform-tools" "platforms;android-35" "build-tools;35.0.0"

      - name: Point local.properties at CI SDK
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Decode keystore and write properties
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 && secrets.ANDROID_KEYSTORE_PASSWORD && secrets.ANDROID_KEY_ALIAS && secrets.ANDROID_KEY_ALIAS_PASSWORD }}
        run: |
          mkdir -p keystore
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore/release.jks
          cat > keystore.properties <<EOF
          storeFile=keystore/release.jks
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          keyPassword=${ANDROID_KEY_ALIAS_PASSWORD}
          EOF
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}

      - name: Gradle build (release, all flavors)
        run: |
          ./gradlew --stacktrace --no-daemon :app:assembleRelease :wear:assembleRelease

      - name: Upload APKs (release)
        uses: actions/upload-artifact@v4
        with:
          name: apks-release
          path: |
            app/build/outputs/apk/**/release/*.apk
            wear/build/outputs/apk/**/release/*.apk

